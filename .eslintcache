[{"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\index.js":"1","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\App.js":"2","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\reportWebVitals.js":"3","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\PersistentDrawerLeft\\PersistentDrawerLeft.js":"4","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\CardTab\\CardTab.js":"5","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\BreadCrums\\BreadCrum.js":"6","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\data\\sidenav.js":"7","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\data\\data.js":"8","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Navbar\\MenuPopup.js":"9","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Guides\\Home\\Home.js":"10","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Guides\\SettingEnv\\SettingEnv.js":"11","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Guides\\ReportBug\\ReportBug.js":"12"},{"size":517,"mtime":1616845395779,"results":"13","hashOfConfig":"14"},{"size":444,"mtime":1617215969834,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1616845395781,"results":"16","hashOfConfig":"14"},{"size":9928,"mtime":1617215969900,"results":"17","hashOfConfig":"14"},{"size":1893,"mtime":1617215969845,"results":"18","hashOfConfig":"14"},{"size":666,"mtime":1617215969840,"results":"19","hashOfConfig":"14"},{"size":2910,"mtime":1617215969905,"results":"20","hashOfConfig":"14"},{"size":2422,"mtime":1617215969902,"results":"21","hashOfConfig":"14"},{"size":1259,"mtime":1617217254007,"results":"22","hashOfConfig":"14"},{"size":200,"mtime":1617213734593,"results":"23","hashOfConfig":"14"},{"size":819,"mtime":1617215969889,"results":"24","hashOfConfig":"14"},{"size":1658,"mtime":1617215969885,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bsflcx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"56","usedDeprecatedRules":"28"},"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\index.js",[],["57","58"],"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\App.js",[],"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\reportWebVitals.js",[],"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\PersistentDrawerLeft\\PersistentDrawerLeft.js",["59","60","61","62","63","64"],"import React, { useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport data from \"../data/sidenav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BreadCrum from \"../BreadCrums/BreadCrum\";\r\nimport CardTab from \"../CardTab/CardTab\";\r\nimport filedata from \"../data/data\";\r\nimport MenuPopup from \"../Navbar/MenuPopup\"\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport \"./PersistentDrawerLeft.css\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useParams, withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    // overflow: \"hidden\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction PersistentDrawerLeft() {\r\n  const { pathid } = useParams();\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [filldata, setfilldata] = React.useState({});\r\n  const [midcontent, setmidcontent] = React.useState(null);\r\n  useEffect(() => {\r\n    console.log(window.location.href.split(\"/\")[3]);\r\n    const dataa = filedata.filter(\r\n      (elem) => elem.url === \"/\" + window.location.href.split(\"/\")[3]\r\n    );\r\n\r\n    setmidcontent(dataa[0].icon);\r\n    console.log(dataa[0]);\r\n  }, [pathid, window.location.href]);\r\n\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n  const updateWidthAndHeight = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateWidthAndHeight);\r\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <div\r\n            className={classes.title}\r\n            style={{ display: \"flex\", alignItems: \"center\" }}\r\n          >\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <img\r\n                style={{\r\n                  width: \"50px\",\r\n                  height: \"50px\",\r\n                  borderRadius: \"20px\",\r\n                  paddingBottom: \"2px\",\r\n                }}\r\n                src=\"https://avatars.githubusercontent.com/u/60218698?s=400&u=f45b9471159098e69cb0f2acc3b8c5947ce6dabc&v=4\"\r\n                alt=\"logo\"\r\n              />\r\n            </IconButton>\r\n            {!open && (\r\n              <div>\r\n                <div>\r\n                  <h2 className=\"Main-logo\">\r\n                    <span>Project</span>\r\n                    <span className=\"Sakura\"> Sakura</span>\r\n                  </h2>\r\n                </div>\r\n                <div className=\"spring\">\r\n                  <h6>\r\n                    <i>feels like spring</i>\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {width > 720 && (\r\n            <div>\r\n              <Button color=\"inherit\">\r\n                <b>Home</b>\r\n              </Button>\r\n              <Button color=\"inherit\">\r\n                <b>Download</b>\r\n              </Button>\r\n              <Button color=\"inherit\">\r\n                <b>Stats</b>\r\n              </Button>\r\n              <Button color=\"inherit\">\r\n                <b>Blog</b>\r\n              </Button>\r\n            </div>\r\n          )}\r\n          {width <= 720 && (           \r\n              <MenuPopup/>         \r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        style={{ overflow: \"hidden\" }}\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div\r\n          className={classes.drawerHeader}\r\n          style={{\r\n            zIndex: 1,\r\n            backgroundColor: \"#1e1e1e\",\r\n            position: \"fixed\",\r\n            width: drawerWidth,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: \"2px\",\r\n            }}\r\n          >\r\n            <img\r\n              style={{\r\n                width: \"40px\",\r\n                height: \"40px\",\r\n                borderRadius: \"20px\",\r\n                marginRight: \"7px\",\r\n              }}\r\n              src=\"https://avatars.githubusercontent.com/u/60218698?s=400&u=f45b9471159098e69cb0f2acc3b8c5947ce6dabc&v=4\"\r\n              alt=\"logo\"\r\n            />\r\n            <div>\r\n              <h4 className=\"drawer_logoname\">\r\n                <span className=\"drawer_project\">Project</span>\r\n                <span className=\"drawer_sakura\"> Sakura</span>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n          <IconButton\r\n            style={{\r\n              color: \"whitesmoke\",\r\n            }}\r\n            onClick={handleDrawerClose}\r\n          >\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginTop: \"55px\",\r\n            backgroundColor: \"#1e1e1e\",\r\n            color: \"whitesmoke\",\r\n          }}\r\n        >\r\n          {data.map((elem1) => {\r\n            return (\r\n              <>\r\n                <Divider />\r\n                <ListItem\r\n                  className=\"drawer_elements\"\r\n                  key={elem1.topname}\r\n                >\r\n                <ListItemText primary={elem1.topname} \r\n                style={{\r\n                color: \"#00ccff\",\r\n                }}\r\n                />\r\n                </ListItem>\r\n                <List style={{ padding: \"0px\" }}>\r\n                  {elem1.content.map((insideelem) => (\r\n                    <Link to={insideelem.url}>\r\n                      <ListItem\r\n                        className=\"drawer_elements\"\r\n                        button\r\n                        key={insideelem.url}\r\n                      >\r\n                        <ListItemIcon\r\n                          style={{\r\n                            color: \"#00ccff\",\r\n                          }}\r\n                        >\r\n                          {insideelem.icon}\r\n                        </ListItemIcon>\r\n                        <ListItemText>\r\n                          <div\r\n                            style={{\r\n                              textDecoration: \"none\",\r\n                              color: \"whitesmoke\",\r\n                            }}\r\n                          >\r\n                            {insideelem.name}\r\n                          </div>\r\n                        </ListItemText>\r\n                      </ListItem>\r\n                    </Link>\r\n                  ))}\r\n                </List>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      </Drawer>\r\n      {(!open || width > 720) && (\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <BreadCrum />\r\n          <div className=\"main_content_cards\">\r\n            <CardTab />\r\n            {midcontent}\r\n          </div>\r\n        </main>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(PersistentDrawerLeft);\r\n","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\CardTab\\CardTab.js",["65"],"import React from \"react\";\r\nimport \"./CardTab.css\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport WebIcon from \"@material-ui/icons/Web\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport Mascot from \"./export_3.png\";\r\n\r\nconst CardTab = () => {\r\n  return (\r\n    <div className=\"cardtab\">\r\n      <div class=\"card_table_of_content\">\r\n        <div className=\"card_list\">\r\n          <h5 className=\"card_heading\">Talk with us</h5>\r\n          <div className=\"card_listitem\">\r\n            <WebIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://projectsakura.xyz\">Website</a>\r\n          </div>\r\n          <div className=\"card_listitem\">\r\n            <GetAppIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://projectsakura.xyz/download\">Download</a>\r\n          </div>\r\n          <div className=\"card_listitem\">\r\n            <EqualizerIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://projectsakura.xyz/stats.html\">Stats</a>\r\n          </div>          \r\n          <div className=\"card_listitem\">\r\n            <GitHubIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://github.com/ProjectSakura\">Github</a>\r\n          </div>\r\n          <div className=\"card_listitem\">\r\n            <TelegramIcon style={{ backgroundColor: \"#1e1e1e\" }} /><a href=\"https://t.me/ProjectSakura\">Telegram </a>\r\n          </div>          \r\n        </div>\r\n      </div>\r\n      <div className=\"mascot\">\r\n        <center>\r\n          <h4>Our Mascot</h4>\r\n          <img\r\n            src={Mascot}\r\n            style={{ width: \"100%\" }}\r\n            alt=\"project sakura mascot\"\r\n          />\r\n        </center>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardTab;\r\n","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\BreadCrums\\BreadCrum.js",["66"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./BreadCrum.css\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst BreadCrum = () => {\r\n  const [data, setData] = useState(window.location.href.split(\"/\"));\r\n\r\n  useEffect(() => {\r\n    setData(window.location.href.split(\"/\"));\r\n  }, [window.location.href]);\r\n  return (\r\n    <div className=\"breadcrum\">\r\n      <div className=\"breadcrum_content\">\r\n        <HomeIcon className=\"breadcrum_home\" /> {data[3].toUpperCase()} /{\" \"}\r\n        {data[4] && data[4].toUpperCase()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(BreadCrum);\r\n","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\data\\sidenav.js",["67"],"import SettingsOverscanIcon from \"@material-ui/icons/SettingsOverscan\";\r\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\r\nimport BuildSakuraIcon from \"@material-ui/icons/Build\"\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\r\nimport GestureTwoToneIcon from \"@material-ui/icons/GestureTwoTone\";\r\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst data = [\r\n  {\r\n    topname: \"Basic Info\",\r\n    topicon: <HomeIcon />,\r\n    content: [\r\n      {\r\n        name: \"Building Sakura\",\r\n        icon: <BuildSakuraIcon />,\r\n        url: \"/build-sakura\",\r\n      },\r\n      {\r\n        name: \"Reporting a bug\",\r\n        icon: <ReportProblemIcon />,\r\n        url: \"/report-bug\",\r\n      },\r\n      {\r\n        name: \"Installing Sakura\",\r\n        icon: <CloudDownloadIcon />,\r\n        url: \"/install-sakura\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    topname: \"Maintainers\",\r\n    topicon: <HomeIcon />,\r\n\r\n    content: [\r\n      {\r\n        name: \"Apply for maintainership\",\r\n        icon: <GroupAddIcon />,\r\n        url: \"/apply\",\r\n      },\r\n      {\r\n        name: \"Support new device\",\r\n        icon: <PhoneAndroidIcon />,\r\n        url: \"/support-us\",\r\n      },\r\n      {\r\n        name: \"Code of Conduct\",\r\n        icon: <BookIcon />,\r\n        url: \"/code-of-conduct\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    topname: \"Features\",\r\n    topicon: <HomeIcon />,\r\n    content: [\r\n      {\r\n        name: \"Animation\",\r\n        icon: <SlideshowIcon />,\r\n        url: \"/animation\",\r\n      },\r\n      {\r\n        name: \"Gestures\",\r\n        icon: <GestureTwoToneIcon />,\r\n        url: \"/gestures\",\r\n      },\r\n      {\r\n        name: \"Hardware Buttons\",\r\n        icon: <TouchAppIcon />,\r\n        url: \"/hardware-buttons\",\r\n      },\r\n      {\r\n        name: \"Miscellaneous\",\r\n        icon: <GestureTwoToneIcon />,\r\n        url: \"/miscellaneous\",\r\n      },\r\n      {\r\n        name: \"Navigation\",\r\n        icon: <NavigationIcon />,\r\n        url: \"/navigation\",\r\n      },\r\n      {\r\n        name: \"Notification\",\r\n        icon: <NotificationsActiveIcon />,\r\n        url: \"/notification\",\r\n      },\r\n      {\r\n        name: \"Power Menu\",\r\n        icon: <PowerSettingsNewIcon />,\r\n        url: \"/power-menu\",\r\n      },\r\n      {\r\n        name: \"Statusbar\",\r\n        icon: <EqualizerIcon />,\r\n        url: \"/statusbar\",\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default data;\r\n","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\data\\data.js",["68"],"import CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\r\nimport GestureTwoToneIcon from \"@material-ui/icons/GestureTwoTone\";\r\nimport TouchAppIcon from \"@material-ui/icons/TouchApp\";\r\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SettingEnv from \"../Guides/SettingEnv/SettingEnv\";\r\nimport ReportBug from \"../Guides/ReportBug/ReportBug\";\r\nimport BuildSakuraIcon from \"@material-ui/icons/Build\"\r\n\r\nconst filedata = [\r\n  {\r\n    name: \"Setting up environment\",\r\n    icon: <SettingEnv />,\r\n    url: \"/\",\r\n  },\r\n  {\r\n    name: \"Build Sakura\",\r\n    icon: <BuildSakuraIcon />,\r\n    url: \"/build-sakura\",\r\n  },  \r\n  {\r\n    name: \"Reporting a bug\",\r\n    icon: <ReportBug />,\r\n    url: \"/report-bug\",\r\n  },\r\n  {\r\n    name: \"Installing Sakura\",\r\n    icon: <CloudDownloadIcon />,\r\n    url: \"/install-sakura\",\r\n  },\r\n\r\n  {\r\n    name: \"Apply for maintainership\",\r\n    icon: <GroupAddIcon />,\r\n    url: \"/apply\",\r\n  },\r\n  {\r\n    name: \"Support new device\",\r\n    icon: <PhoneAndroidIcon />,\r\n    url: \"/support-us\",\r\n  },\r\n  {\r\n    name: \"Code of Conduct\",\r\n    icon: <BookIcon />,\r\n    url: \"/code-of-conduct\",\r\n  },\r\n  {\r\n    name: \"Animation\",\r\n    icon: <SlideshowIcon />,\r\n    url: \"/animation\",\r\n  },\r\n  {\r\n    name: \"Gestures\",\r\n    icon: <GestureTwoToneIcon />,\r\n    url: \"/gestures\",\r\n  },\r\n  {\r\n    name: \"Hardware Buttons\",\r\n    icon: <TouchAppIcon />,\r\n    url: \"/hardware-buttons\",\r\n  },\r\n  {\r\n    name: \"Miscellaneous\",\r\n    icon: <GestureTwoToneIcon />,\r\n    url: \"/miscellaneous\",\r\n  },\r\n  {\r\n    name: \"Navigation\",\r\n    icon: <NavigationIcon />,\r\n    url: \"/navigation\",\r\n  },\r\n  {\r\n    name: \"Notification\",\r\n    icon: <NotificationsActiveIcon />,\r\n    url: \"/notification\",\r\n  },\r\n  {\r\n    name: \"Power Menu\",\r\n    icon: <PowerSettingsNewIcon />,\r\n    url: \"/power-menu\",\r\n  },\r\n  {\r\n    name: \"Statusbar\",\r\n    icon: <EqualizerIcon />,\r\n    url: \"/statusbar\",\r\n  },\r\n];\r\nexport default filedata;\r\n","C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Navbar\\MenuPopup.js",["69"],"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Guides\\Home\\Home.js",[],"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Guides\\SettingEnv\\SettingEnv.js",[],"C:\\Open Source-Gssoc'21\\wiki-redesign\\src\\components\\Guides\\ReportBug\\ReportBug.js",["70","71"],"import React from \"react\";\r\nimport \"./ReportBug.css\";\r\n\r\nconst ReportBug = () => {\r\n  return (\r\n    <div className=\"environment\">\r\n      <center>\r\n        <div className=\"content\">\r\n          <h2>REPORTING A BUG</h2>\r\n          <p>Here we will guide you on how to report a bug related to Project Sakura</p>\r\n          <hr />          \r\n          <h2>WHERE SHOULD I REPORT BUGS</h2>\r\n          <p>You can report Bugs that are related to our Source on our <a href=\"https://github.com/ProjectSakura/Bug_Tracker\" target=\"_blank\">Bug Reports Repo.</a>\r\n          <br />\r\n          If you are facing a bug related to a specific device then you can report about it to the device maintainer in our Telegram Chat or the device specific support Group.\r\n          </p>\r\n          <hr />\r\n          <h2>WHAT DO I NEED TO INCLUDE IN THE BUG REPORT </h2>\r\n          <p>If you are going to report the bug on our Bug report Repo then you can use the template that we have designed for opening Issues there. \r\n          <br />\r\n          If you are going to report any device specific bug then you will need to write the description of the bug and properly explain the procedure of \r\n          reproducing the bug. It is also required to attach screenshots or a logcat. \r\n          </p>\r\n          <hr />\r\n          <h2>HOW TO TAKE LOGCATS </h2>\r\n          <p>You can follow this amazing article to know how to properly take log using both ADB and Any Logcat Application,\r\n          <a href=\"https://telegra.ph/BUG-REPORTING-GUIDE-FOR-DUMMIES-10-05\" target=\"_blank\"> Follow this link</a></p>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReportBug;",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":16},{"ruleId":"76","severity":1,"message":"81","line":21,"column":8,"nodeType":"78","messageId":"79","endLine":21,"endColumn":16},{"ruleId":"76","severity":1,"message":"82","line":102,"column":10,"nodeType":"78","messageId":"79","endLine":102,"endColumn":18},{"ruleId":"76","severity":1,"message":"83","line":102,"column":20,"nodeType":"78","messageId":"79","endLine":102,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":112,"column":6,"nodeType":"86","endLine":112,"endColumn":36,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"88","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":27},{"ruleId":"84","severity":1,"message":"85","line":11,"column":6,"nodeType":"86","endLine":11,"endColumn":28,"suggestions":"89"},{"ruleId":"76","severity":1,"message":"90","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":28},{"ruleId":"76","severity":1,"message":"91","line":12,"column":8,"nodeType":"78","messageId":"79","endLine":12,"endColumn":16},{"ruleId":"76","severity":1,"message":"92","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"94","line":13,"column":72,"nodeType":"95","messageId":"96","endLine":13,"endColumn":143,"fix":"97"},{"ruleId":"93","severity":1,"message":"94","line":27,"column":11,"nodeType":"95","messageId":"96","endLine":27,"endColumn":94,"fix":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'MenuItem' is defined but never used.","'MenuIcon' is defined but never used.","'filldata' is assigned a value but never used.","'setfilldata' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window.location.href'. Either exclude it or remove the dependency array. Outer scope values like 'window.location.href' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["101"],"'ArrowForwardIosIcon' is defined but never used.",["102"],"'SettingsOverscanIcon' is defined but never used.","'HomeIcon' is defined but never used.","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"103","text":"104"},{"range":"105","text":"104"},"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},[524,524]," rel=\"noreferrer\"",[1548,1548],"Update the dependencies array to be: [pathid]",{"range":"110","text":"111"},"Update the dependencies array to be: []",{"range":"112","text":"113"},[3425,3455],"[pathid]",[351,373],"[]"]