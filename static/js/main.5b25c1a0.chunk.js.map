{"version":3,"sources":["components/PersistentDrawerLeft/logo.png","components/data/sidenav.js","components/Navbar/MenuPopup.js","components/CardTab/export_3.png","components/CardTab/CardTab.js","components/BreadCrums/BreadCrum.js","components/404page/404.gif","components/404page/404page.js","components/Footer/Footer.js","components/Loader/Loader.js","components/Guides/SettingEnv/projectSakura.png","components/Guides/SettingEnv/SettingEnv.js","components/Guides/ReportBug/ReportBug.js","components/Guides/BuildSakura/BuildSakura.js","components/Guides/InstallSakura/InstallSakura.js","components/Guides/ApplyMaintainers/ApplyMaintainers.js","components/Guides/BuildFlags/BuildFlags.js","components/Guides/Interface/Interface.js","components/Guides/QuickSetting/QuickSetting.js","components/Guides/LockScreen/LockScreen.js","components/Guides/Gesture/Gesture.js","components/Guides/Notification/Notification.js","components/Guides/Miscellaneous/Miscellaneous.js","components/PersistentDrawerLeft/PersistentDrawerLeft.js","App.js","reportWebVitals.js","index.js"],"names":["data","topname","topicon","content","name","icon","url","MenuPopupState","popupState","usePopupState","variant","popupId","bindTrigger","Menu","className","bindMenu","onClick","close","MenuItem","href","CardTab","style","backgroundColor","target","rel","src","Mascot","alt","withRouter","useState","window","location","split","setData","useEffect","toUpperCase","NoMatchPage","Image","useStyles","makeStyles","theme","root","display","marginLeft","spacing","LinearBuffer","classes","CircularProgress","SettingEnv","loading","setLoading","setTimeout","image","ReportBug","BuildSakura","language","wrapLongLines","lineProps","wordBreak","whiteSpace","dracula","InstallSakura","ApplyMaintainers","title","width","height","frameBorder","BuildFlags","Interface","QuickSetting","LockScreen","Gesture","Notification","Miscellaneous","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","useTheme","React","open","setOpen","innerWidth","setWidth","updateWidthAndHeight","handleDrawerClose","addEventListener","removeEventListener","CssBaseline","AppBar","position","clsx","Toolbar","gap","borderRadius","color","Button","Drawer","overflow","anchor","paper","zIndex","IconButton","direction","marginTop","map","elem1","Divider","ListItem","ListItemText","primary","List","insideelem","to","button","ListItemIcon","textDecoration","path","exact","component","Page404","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b25c1a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.28b9df0f.png\";","import ReportProblemIcon from \"@material-ui/icons/ReportProblem\";\nimport BuildSakuraIcon from \"@material-ui/icons/Build\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\";\nimport GestureTwoToneIcon from \"@material-ui/icons/GestureTwoTone\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport ArtTrackIcon from \"@material-ui/icons/ArtTrack\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst data = [\n  {\n    topname: \"Basic Info\",\n    topicon: <HomeIcon />,\n    content: [\n      {\n        name: \"Installing Sakura\",\n        icon: <CloudDownloadIcon />,\n        url: \"/install-sakura\",\n      },\n      {\n        name: \"Reporting a bug\",\n        icon: <ReportProblemIcon />,\n        url: \"/report-bug\",\n      },\n    ],\n  },\n  {\n    topname: \"Maintainers\",\n    topicon: <HomeIcon />,\n\n    content: [\n      {\n        name: \"Building Sakura\",\n        icon: <BuildSakuraIcon />,\n        url: \"/build-sakura\",\n      },\n      {\n        name: \"Build Flags\",\n        icon: <BookIcon />,\n        url: \"/build-flags\",\n      },\n      {\n        name: \"Apply for maintainership\",\n        icon: <GroupAddIcon />,\n        url: \"/apply\",\n      },\n    ],\n  },\n  {\n    topname: \"Features\",\n    topicon: <HomeIcon />,\n    content: [\n      {\n        name: \"Interface\",\n        icon: <SlideshowIcon />,\n        url: \"/interface\",\n      },\n      {\n        name: \"Quick Settings\",\n        icon: <SettingsIcon />,\n        url: \"/quicksetting\",\n      },\n      {\n        name: \"Lock Screen\",\n        icon: <LockIcon />,\n        url: \"/lockscreen\",\n      },\n      {\n        name: \"Gesture\",\n        icon: <GestureTwoToneIcon />,\n        url: \"/gesture\",\n      },\n      {\n        name: \"Miscellaneous\",\n        icon: <ArtTrackIcon />,\n        url: \"/miscellaneous\",\n      },\n      {\n        name: \"Notification\",\n        icon: <NotificationsActiveIcon />,\n        url: \"/notification\",\n      },\n    ],\n  },\n];\nexport default data;\n","import * as React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./MenuPopup.css\";\n\nimport {\n  usePopupState,\n  bindTrigger,\n  bindMenu,\n} from \"material-ui-popup-state/hooks\";\n\nconst MenuPopupState = () => {\n  const popupState = usePopupState({ variant: \"popover\", popupId: \"demoMenu\" });\n  return (\n    <div>\n      <MenuIcon {...bindTrigger(popupState)} />\n      <Menu className=\"menu_popup\" {...bindMenu(popupState)}>\n        <CloseIcon className=\"menu_close\" onClick={popupState.close} />\n        <span className=\"menu_span\"><MenuItem className=\"menu_items\"><a className=\"navlink\" href=\"https://projectsakura.xyz/\">Home</a></MenuItem></span>\n        <span className=\"menu_span\"><MenuItem className=\"menu_items\"><a className=\"navlink\" href=\"https://projectsakura.xyz/blog\">Blog</a></MenuItem></span>\n        <span className=\"menu_span\"><MenuItem className=\"menu_items\"><a className=\"navlink\" href=\"https://projectsakura.xyz/stats.html\">Stats</a></MenuItem></span>\n        <span className=\"menu_span\"><MenuItem className=\"menu_items\"><a className=\"navlink\" href=\"https://projectsakura.xyz/download\">Download</a></MenuItem></span>\n      </Menu>\n    </div>\n  );\n};\nexport default MenuPopupState;\n","export default __webpack_public_path__ + \"static/media/export_3.402e33c1.png\";","import React from \"react\";\nimport \"./CardTab.css\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\nimport WebIcon from \"@material-ui/icons/Web\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport Mascot from \"./export_3.png\";\n\nconst CardTab = () => (\n  <div className=\"cardtab\">\n    <div className=\"card_table_of_content\">\n      <div className=\"card_list\">\n        <h5 className=\"card_heading\">Talk with us</h5>\n        <div className=\"card_listitem\">\n          <WebIcon style={{ backgroundColor: \"#1e1e1e\" }} />\n          <a href=\"https://projectsakura.xyz\">Website</a>\n        </div>\n        <div className=\"card_listitem\">\n          <GetAppIcon style={{ backgroundColor: \"#1e1e1e\" }} />\n          <a href=\"https://projectsakura.xyz/download\">Download</a>\n        </div>\n        <div className=\"card_listitem\">\n          <EqualizerIcon style={{ backgroundColor: \"#1e1e1e\" }} />\n          <a href=\"https://projectsakura.xyz/stats.html\">Stats</a>\n        </div>\n        <div className=\"card_listitem\">\n          <GitHubIcon style={{ backgroundColor: \"#1e1e1e\" }} />\n          <a href=\"https://github.com/ProjectSakura\">Github</a>\n        </div>\n        <div className=\"card_listitem\">\n          <TelegramIcon style={{ backgroundColor: \"#1e1e1e\" }} />\n          <a href=\"https://t.me/ProjectSakura\">Telegram </a>\n        </div>\n      </div>\n    </div>\n    <div className=\"mascot\">\n      <center>\n        <h4>Proud Sponsor</h4>\n        <br />\n        <a href=\"https://www.xsl.tel/\" target=\"_blank\" rel=\"noreferrer\">\n          <img\n            src={Mascot}\n            className=\"sponsor\"\n            alt=\"project sakura mascot\"\n          />\n        </a>\n      </center>\n    </div>\n  </div>\n);\n\nexport default CardTab;\n","import React, { useEffect, useState } from \"react\";\nimport \"./BreadCrum.css\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { withRouter } from \"react-router-dom\";\n\nconst BreadCrum = () => {\n  const [data, setData] = useState(window.location.href.split(\"/\"));\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    setData(window.location.href.split(\"/\")); // eslint-disable-next-line\n  }, [window.location.href]);\n  return (\n    <div className=\"breadcrum\">\n      <div className=\"breadcrum_content\">\n        <HomeIcon className=\"breadcrum_home\" />\n        /\n        {\" \"}\n        {data[4] && data[4].toUpperCase()}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(BreadCrum);\n","export default __webpack_public_path__ + \"static/media/404.a2796d14.gif\";","import React from \"react\";\nimport \"./404page.css\";\nimport Image from \"./404.gif\";\n\nconst NoMatchPage = () => (\n  <div className=\"page404\">\n    <div>\n      <img src={Image} alt=\"404\" />\n    </div>\n  </div>\n);\n\nexport default NoMatchPage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Footer.css\";\n\nconst footer = () => (\n  <div className=\"footer_div\">\n    <h2>\n      Made with\n      {\" \"}\n      ❤️\n      {\" \"}\n      © 2020-21 Project\n      {\" \"}\n      <span className=\"footer_sakura\">Sakura</span>\n    </h2>\n  </div>\n);\nexport default withRouter(footer);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function LinearBuffer() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/projectSakura.e0f05375.png\";","import React, { useEffect, useState } from \"react\";\nimport Loader from \"../../Loader/Loader\";\nimport image from \"./projectSakura.png\";\nimport \"./SettingEnv.css\";\n\nconst SettingEnv = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n      <center>\n        <div className=\"content\">\n          <img className=\"home_image\" alt=\"data\" src={image} />\n          <h1>WELCOME TO PROJECT SAKURA WIKI</h1>\n          <hr />\n          <h3>Some basic info about ProjectSakura!</h3>\n          <p>\n            {\" \"}\n            ProjectSakura was started by LordShenron as a hobby Project in\n            February of 2020. Later on ArunTeltia joined in as a fulltime web\n            developer for the Project.\n          </p>\n          <p>\n            ProjectSakura uses LineageOS as base and closely stick to it. Infact\n            you can build ProjectSakura using same LineageOS trees.\n          </p>\n          <p>\n            As of this moment ProjectSakura have evolved through 2 major Android\n            Releases. The current Stable version is 5.R based on Android 11.\n          </p>\n          <hr />\n\n          <h4>\n            © All Rights Reserved 2020-2021\n            Project Sakura\n          </h4>\n        </div>\n      </center>\n      )}\n    </div>\n  );\n};\n\nexport default SettingEnv;\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./ReportBug.css\";\n\nconst ReportBug = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>REPORTING A BUG</h2>\n            <p>Here we will guide you on how to report a bug related to Project Sakura</p>\n            <hr />\n            <h2>WHERE SHOULD I REPORT BUGS</h2>\n            <p>\n              You can report Bugs that are related to our Source on our\n              <a href=\"https://github.com/ProjectSakura/Bug_Tracker\" target=\"_blank\" rel=\"noreferrer\"> Bug Reports Repo.</a>\n              <br />\n              If you are facing a bug related to a specific device then you can report about it to the device maintainer in our Telegram Chat or the device specific support Group.\n            </p>\n            <hr />\n            <h2>WHAT DO I NEED TO INCLUDE IN THE BUG REPORT </h2>\n            <p>\n              If you are going to report the bug on our Bug report Repo then you can use the template that we have designed for opening Issues there.\n              <br />\n              If you are going to report any device specific bug then you will need to write the description of the bug and properly explain the procedure of\n              reproducing the bug. It is also required to attach screenshots or a logcat.\n            </p>\n            <hr />\n            <h2>HOW TO TAKE LOGCATS </h2>\n            <p>\n              You can follow this amazing article to know how to properly take log using both ADB and Any Logcat Application,\n              <a href=\"https://telegra.ph/BUG-REPORTING-GUIDE-FOR-DUMMIES-10-05\" target=\"_blank\" rel=\"noreferrer\"> Follow this link</a>\n            </p>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default ReportBug;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./BuildSakura.css\";\n\nconst BuildSakura = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>BUILDING SAKURA</h2>\n            <p>\n              Here we will guide you on how to build Project Sakura for your\n              device.\n            </p>\n            <hr />\n            <h2>HOW TO SETUP A BUILD ENVIRONMENT</h2>\n            <p>\n              To Build Project Sakura you can use any 64 Bit Linux Distro, though\n              we recommend using Ubuntu 18.04, LinuxMint, MXLinux or Manjaro. You\n              can setup the build environment using\n              <a href=\"https://github.com/akhilnarang/scripts\" target=\"_blank\" rel=\"noreferrer\">\n                {\" \"}\n                Akhil Narang's Script\n              </a>\n              <br />\n              <br />\n            </p>\n            <div className=\"wrapper\">\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                git clone https://github.com/akhilnarang/scripts; cd scripts; sudo bash setup/android_build_env.sh\n              </SyntaxHighLighter>\n            </div>\n            <br />\n            <p>\n              Or You can install all the packages manually using the commands\n              below.\n              <br />\n              <br />\n            </p>\n            <div className=\"wrapper\">\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                sudo apt-get install openjdk-8-jdk && sudo apt-get update && sudo apt-get install git-core gnupg flex bison gperf libsdl1.2-dev libesd0-dev squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev openjdk-8-jre openjdk-8-jdk pngcrush schedtool libxml2 libxml2-utils xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev lib32ncurses5-dev lib32readline-gplv2-dev gcc-multilib maven tmux screen w3m ncftp\n              </SyntaxHighLighter>\n            </div>\n            <hr />\n            <h2>SYNCING SOURCES </h2>\n            <p>\n              To Sync ProjectSakura Sources you will need to execute the following\n              command\n              {\" \"}\n              <br />\n              (PS: This command will shallow sync the sources which saves\n              bandwidth and storage space if you are just going to build and not\n              do any source side changes.)\n              <br />\n              <br />\n            </p>\n            <div className=\"wrapper\">\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                repo init --depth=1 -u git://github.com/ProjectSakura/android.git -b 11 && repo sync --current-branch --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune -j `nproc`\n              </SyntaxHighLighter>\n            </div>\n            <hr />\n            <h2>BUILDING SAKURA </h2>\n            <p>\n              Now execute the below command to start building ProjectSakura,\n              replace \"devicecodename\" with your device's code. E.g, for ASUS\n              ZENFONE MAX PRO M1 we will write X00T.\n              <br />\n              <br />\n            </p>\n            <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n              . build/envsetup.sh && lunch lineage_devicecodename-userdebug && mka bacon -jx\n            </SyntaxHighLighter>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default BuildSakura;\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./InstallSakura.css\";\n\nconst InstallSakura = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>INSTALLING SAKURA </h2>\n            <p>\n              In this article we will tell you how to flash ProjectSakura.\n              <br />\n              <br />\n              <i>This article only cover universal steps that you need to take and things may differ for every device so it's better if you also follow the XDA thread for your device.</i>\n              {\" \"}\n\n            </p>\n            <hr />\n            <h2>DOWNLOAD PROJECT SAKURA</h2>\n            <p>\n              To flash ProjectSakura you will need to get the flashable ROM zip for your device. We have a download center where you can get builds for every device that we support, Go to\n              <a href=\"https://ProjectSakura.xyz/download\" target=\"_blank\" rel=\"noreferrer\"> ProjectSakura | Downloads</a>\n              <br />\n              <br />\n              If you cannot find the build for your device on our download center then it probably is unsupported  by us.\n              <br />\n              <br />\n              <i>Note: Some devices also need specific firmwares and Vendors to be flashed with ROM. To know more you should check the XDA thread or Telegram Chats of your device.</i>\n            </p>\n            <hr />\n            <h2>FLASHING PROJECT SAKURA </h2>\n            <p>\n              After you have downloaded all the needed files, you can proceed with the flashing process. Boot your device into recovery mode and go to advanced wipe after that wipe dalvik, cache, system, vendor and data.\n              <br />\n              <br />\n              Once you have wiped, flash the required firmware/ vendor zips and the flashable ROM zip. Then reboot to system and enjoy a clean Android experience.\n              <br />\n              <br />\n              <i>Note: ProjectSakura provides three types of builds GAPPS, VANILLA and MICROG. You may or maynot need to flash a separate GAPPS package depending on the type of the build; maintainer is releasing.</i>\n            </p>\n            <hr />\n            <h2>GAINING ROOT ACCESS</h2>\n            <p>\n              You will need to flash Magisk in order to gain root access. You can download the flashable magisk zip from it's Github Repo. We only recommend you to download magisk from verified sources.\n            </p>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default InstallSakura;\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./ApplyMaintainers.css\";\n\nconst ApplyMaintainers = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>APPLY FOR PROJECT SAKURA MAINTAINERSHIP </h2>\n            <p>\n              In this article we will tell you how you can become an Official ProjectSakura Maintainer.\n            </p>\n            <hr />\n            <h2>GUIDELINES</h2>\n            <p>\n              You don't need too many skills to be a device maintainer. Though you need to fullfill these simple guidelines.\n              <br />\n              <br />\n              1. You must own the device.\n              You can maintain the device that have minimal hardware difference and use common trees with your device.\n              BLIND building is absolutely NOT allowed.\n              <br />\n              <br />\n              2. You must know Basic git ( creating pull requests, properly writing commits, cherry-picking and other basic stuff).\n              <br />\n              <br />\n              3. You must have made some contributions towards your device community instead of just taking a device tree and compiling.\n              <br />\n              <br />\n              4. You must know how to read basic logcats.\n              <br />\n              <br />\n              5. You must have to compile Unofficial builds before you apply for Official. Do NOT apply as soon as you built an unofficial build and instead maintain it for a period of 2 months.\n              Applying before you have even built will lead to instant rejection and we will blacklist you in our database.\n              <br />\n              <br />\n              6. Co-Maintaining is allowed but you cannot be a shadow maintainer for some other guy.\n              <br />\n              <br />\n              <b>You will recieve an email or Telegram message if we acknowledge your application. In some cases we may talk to you for some period of time to decide if we should accept or reject your application.</b>\n            </p>\n            <hr />\n            <h2>APPLICATION FORM </h2>\n            <p>\n              Once you make sure that you are fullfilling all the above guidelines, you can use the Google Form below to apply for Official maintainership.\n              <br />\n              {\" \"}\n              <br />\n              <div>\n                <iframe className=\"form\" title=\"maintainer-form\" src=\"https://docs.google.com/forms/d/e/1FAIpQLSfKFUSyohdGKQFLEZCxsxCemlcXdKUMPCsShi0TXGJu7ihceg/viewform?embedded=true\" width=\"700\" height=\"520\" frameBorder=\"0\">Loading…</iframe>\n              </div>\n              <br />\n              <br />\n            </p>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default ApplyMaintainers;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./BuildFlags.css\";\n\nconst BuildFlags = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>FLAGS PRESENT IN PROJECT SAKURA</h2>\n            <p>In this article we will tell you about all the available Flags in ProjectSakura</p>\n            <hr />\n            <h2>\n              List of all flags with their functionality.\n            </h2>\n            <p>\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                SAKURA_BUILD_TYPE=coregapps //For building ProjectSakura with Builtin Core GAPPS\n              </SyntaxHighLighter>\n              <br />\n              <br />\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n               SAKURA_BUILD_TYPE=basicgapps //For building ProjectSakura with Builtin Basic GAPPS\n              </SyntaxHighLighter>\n              <br />\n              <br />\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                SAKURA_BUILD_TYPE := microg //For building ProjectSakura with Builtin MICROG.\n              </SyntaxHighLighter>\n              <br />\n              <br />\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                SAKURA_LAWNCHAIR := true //For building ProjectSakura with default Lawnchair Launcher.\n              </SyntaxHighLighter>\n              <br />\n              <br />\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                TARGET_USES_BLUR := true //For building ProjectSakura with option to toggle Notification shade Blur.\n              </SyntaxHighLighter>\n              <br />\n              <br />\n              <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                {\n                  \"EXTRA_FOD_ANIMATIONS := true //For building ProjectSakura with FODAnimations resources. \"\n                }\n              </SyntaxHighLighter>\n            </p>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default BuildFlags;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./Interface.css\";\n\nconst Interface = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>Interface </h2>\n            <ol>\n              <li>\n                <b>Roaming Indicator</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display a roaming indicator when in roaming mode.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>LTE to 4G icon</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display a 4G icon instead of old LTE icon.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Old Style Signal icons</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Merge signal and signal type icons (LTE, 4G, Roaming).\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Data Disabled indicators</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display a small cross icon on network icons, indicating that mobile data is turned off.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Bluetooth Battery status</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display the battery level of the connected bluetooth devices.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Traffic Indicators</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Show network traffic status in status bar or QS header.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Charging Animation</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display an animation when the device gets plugged in.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>OneUI styled actionbar</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display a large spacer above settings like in OneUI for easier one hand control.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Settings Dashboard icon</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Tweak dashboard icons in Settings app.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Battery Bar</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Show a battery bar above status bar indicating charging and battery levels.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>G-visual Mod</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Tweak status bar height and corner radius of the UI while using default icon shapes.\n                </SyntaxHighLighter>\n              </li>\n            </ol>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default Interface;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./QuickSetting.css\";\n\nconst QuickSetting = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2 className=\"heading\"><span>Quick Setting</span></h2>\n            <ol>\n              <li><b>QuickSettings Background opacity controller</b></li>\n              <li>\n                <b>QS tint:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Tint the QS tiles with accent color.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Tile Title controller:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display or hide the tile titles in QS.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Vibration controller:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Give haptic feedback while clicking on QS icons.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Data usage in QS header:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Display current data usage from Wifi or Mobile internet.\n                </SyntaxHighLighter>\n              </li>\n              <li><b>QS rows and column controller</b></li>\n              <li><b>Custom Header images for QuickSettings</b></li>\n            </ol>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default QuickSetting;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./LockScreen.css\";\n\nconst LockScreen = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2>Lock Screen</h2>\n            <ol>\n              <li>\n                <b>Lockscreen charging information:</b>\n                <br />\n                {\" \"}\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  show basic information on lock screen while charging.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Background blur:</b>\n                <br />\n                {\" \"}\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Blur the lock screen background if QS blur is enabled.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Weather:</b>\n                <br />\n                {\" \"}\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Show weather on lockscreen or at a glance using OmniJaws weather controller.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Screen Off Animations:</b>\n                <br />\n                {\" \"}\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  use a custom animation for locking screen.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Secure Lockscreen:</b>\n                <br />\n                {\" \"}\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Block powermenu on lockscreen or require authentication to perform power actions.\n                </SyntaxHighLighter>\n              </li>\n            </ol>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default LockScreen;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./Gesture.css\";\n\nconst Gesture = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2 className=\"heading\"><span>Gesture</span></h2>\n            <ol>\n              <li>\n                <b>Three Finger Gesture:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Take a screenshot by swiping with three fingers.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Layout:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Compact, left leaning and right leaning layout for button navigation.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Invert Layout:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Interchange the position of overview and back buttons in 3 button navigation.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Touch Screen Gestures and Full screen gesture tweaks.</b>\n              </li>\n            </ol>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default Gesture;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./Notification.css\";\n\nconst Notification = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2 className=\"heading\"><span>Notification</span></h2>\n            <ol>\n              <li>\n                <b>Notification Opacity:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Change the transparency of Notifications.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Heads Up:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Tweak notification heads values.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Less Boring Heads Up:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Show notification heads up only for important applications.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Noisy Notification:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Disable sounds and vibrations of all notifications when your display is on.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Horizon Light:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Show nice looking accented bars on both sides of the screen in Ambient Notifications.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>In-Call vibration tweaks.</b>\n              </li>\n            </ol>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default Notification;\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { dracula } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport Loader from \"../../Loader/Loader\";\nimport \"./Miscellaneous.css\";\n\nconst Miscellaneous = () => {\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 1500);\n  }, []);\n  return (\n    <div className=\"environment\">\n      {loading && (\n        <div className=\"loader\">\n          <Loader />\n        </div>\n      )}\n      {!loading && (\n        <center>\n          <div className=\"content\">\n            <h2 className=\"heading\"><span>Miscellaneous</span></h2>\n            <ol>\n              <li>\n                <b>Clipboard Access Alerts:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Show a toast when any app accesses your clipboard like in iOS.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Screenshot Sound:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Tweak the quality of the screenshots taken, though it is to note that it may not affect the size of the screenshots.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Volume Panel Timeout:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Tweak to control the time of volume panel visibility.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Volume Steps:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  Change the amount of steps of volume and decrease in each button press.\n                </SyntaxHighLighter>\n              </li>\n              <li>\n                <b>Gaming Mode:</b>\n                <br />\n                <SyntaxHighLighter className=\"syntax\" language=\"bash\" wrapLongLines={true} lineProps={{ style: { wordBreak: 'break-all', whiteSpace: 'pre-wrap' } }} style={dracula}>\n                  A very basic gaming mode, it won’t increase your performance tho.\n                </SyntaxHighLighter>\n              </li>\n            </ol>\n          </div>\n        </center>\n      )}\n    </div>\n  );\n};\n\nexport default Miscellaneous;\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\n\nimport {\n  Link, withRouter, Switch, Route,\n} from \"react-router-dom\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport \"./PersistentDrawerLeft.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Button } from \"@material-ui/core\";\nimport Image from \"./logo.png\";\nimport data from \"../data/sidenav\";\nimport MenuPopup from \"../Navbar/MenuPopup\";\nimport CardTab from \"../CardTab/CardTab\";\nimport BreadCrum from \"../BreadCrums/BreadCrum\";\nimport Page404 from \"../404page/404page\";\nimport Footer from \"../Footer/Footer\";\n\n//routes\n// import SlideshowIcon from \"@material-ui/icons/Slideshow\";\n// import GestureTwoToneIcon from \"@material-ui/icons/GestureTwoTone\";\n// import TouchAppIcon from \"@material-ui/icons/TouchApp\";\n// import NavigationIcon from \"@material-ui/icons/Navigation\";\n// import NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\n// import PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\n//import EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport SettingEnv from \"../Guides/SettingEnv/SettingEnv\";\nimport ReportBug from \"../Guides/ReportBug/ReportBug\";\nimport BuildSakura from \"../Guides/BuildSakura/BuildSakura\";\nimport InstallSakura from \"../Guides/InstallSakura/InstallSakura\";\nimport ApplyMaintainers from \"../Guides/ApplyMaintainers/ApplyMaintainers\";\nimport BuildFlags from \"../Guides/BuildFlags/BuildFlags\";\nimport Interface from \"../Guides/Interface/Interface\";\nimport QuickSetting from \"../Guides/QuickSetting/QuickSetting\";\nimport LockScreen from \"../Guides/LockScreen/LockScreen\";\nimport Gesture from \"../Guides/Gesture/Gesture\";\nimport Notification from \"../Guides/Notification/Notification\";\nimport Miscellaneous from \"../Guides/Miscellaneous/Miscellaneous\";\n\nconst drawerWidth = 280;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n\n  drawerPaper: {\n    width: drawerWidth,\n    // overflow: \"hidden\",\n    backgroundColor: \"#1e1e1e\",\n  },\n  drawerHeader: {\n\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"space-between\",\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  title: {\n    flexGrow: 1,\n  },\n\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(true);\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n\n  useEffect(() => {\n    if (width < 468) handleDrawerClose();\n  }, [width]);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <div\n            className={classes.title}\n            style={{ display: \"flex\", alignItems: \"center\" }}\n          >\n            {!open && (\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: \"2px\",\n                }}\n              >\n                <img\n                  style={{\n                    width: \"6vh\",\n                    height: \"6vh\",\n                    borderRadius: \"20px\",\n                    marginRight: \"7px\",\n                  }}\n                  src={Image}\n                  alt=\"logo\"\n                />\n                <div>\n                  <h1 className=\"drawer_logoname\">\n                    <span className=\"drawer_oroject\">Project</span>\n                    <span className=\"drawer_sakura\"> Sakura</span>\n                    <div className=\"spring\"><em>Feels like spring</em></div>\n                  </h1>\n\n                </div>\n                <div\n                  style={{\n                    color: \"whitesmoke\",\n                    marginLeft: \"2vh\",\n                  }}\n                >\n                  <ChevronRightIcon onClick={handleDrawerOpen} />\n                </div>\n\n              </div>\n\n            )}\n          </div>\n          {width > 720 && (\n            <div>\n              <Button color=\"inherit\">\n                <a href=\"https://projectsakura.xyz/\" target=\"blank\"><b>Home</b></a>\n              </Button>\n              <Button color=\"inherit\">\n                <a href=\"https://projectsakura.xyz/download\" target=\"blank\"><b>Download</b></a>\n              </Button>\n              <Button color=\"inherit\">\n                <a href=\"https://projectsakura.xyz/stats.html\" target=\"blank\"><b>Stats</b></a>\n              </Button>\n              <Button color=\"inherit\">\n                <a href=\"https://projectsakura.xyz/blog\" target=\"blank\"><b>Blog</b></a>\n              </Button>\n            </div>\n          )}\n          {width <= 720 && <MenuPopup />}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        style={{ overflow: \"hidden\" }}\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div\n          className={classes.drawerHeader}\n          style={{\n            zIndex: 1,\n            backgroundColor: \"#1e1e1e\",\n            position: \"fixed\",\n            width: drawerWidth,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"2px\",\n            }}\n          >\n            <img\n              style={{\n                width: \"40px\",\n                height: \"40px\",\n                borderRadius: \"20px\",\n                marginRight: \"7px\",\n              }}\n              src={Image}\n              alt=\"logo\"\n            />\n            <div>\n              <h4 className=\"drawer_logoname\">\n                <span className=\"drawer_project\">Project</span>\n                <span className=\"drawer_sakura\"> Sakura</span>\n              </h4>\n            </div>\n          </div>\n          <IconButton\n            style={{\n              color: \"whitesmoke\",\n            }}\n            onClick={handleDrawerClose}\n          >\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <div\n          style={{\n            marginTop: \"55px\",\n            backgroundColor: \"#1e1e1e\",\n            color: \"whitesmoke\",\n          }}\n        >\n          {data.map((elem1) => (\n            <>\n              <Divider />\n              <ListItem className=\"drawer_elements\" key={elem1.topname}>\n                <ListItemText\n                  primary={elem1.topname}\n                  style={{\n                    color: \"#00ccff\",\n                  }}\n                />\n              </ListItem>\n              <List style={{ padding: \"0px\" }}>\n                {elem1.content.map((insideelem) => (\n                  <Link to={insideelem.url} key={insideelem}>\n                    <ListItem\n                      className=\"drawer_elements\"\n                      button\n                      key={insideelem.url}\n                      onClick={handleDrawerClose}\n                    >\n                      <ListItemIcon\n                        style={{\n                          color: \"#00ccff\",\n                        }}\n                      >\n                        {insideelem.icon}\n                      </ListItemIcon>\n                      <ListItemText>\n                        <div\n                          style={{\n                            textDecoration: \"none\",\n                            color: \"whitesmoke\",\n                          }}\n                        >\n                          {insideelem.name}\n                        </div>\n                      </ListItemText>\n                    </ListItem>\n                  </Link>\n                ))}\n              </List>\n            </>\n          ))}\n        </div>\n      </Drawer>\n      {(!open || width > 720 || width < 468) && (\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <BreadCrum />\n          <div className=\"main_content_cards\">\n            <CardTab />\n            <Switch>\n              <Route path=\"/\" exact component={SettingEnv} />\n              <Route path=\"/build-sakura\" exact component={BuildSakura} />\n              <Route path=\"/report-bug\" exact component={ReportBug} />\n              <Route path=\"/install-sakura\" exact component={InstallSakura} />\n              <Route path=\"/apply\" exact component={ApplyMaintainers} />\n              <Route path=\"/build-flags\" exact component={BuildFlags} />\n              <Route path=\"/interface\" exact component={Interface} />\n              <Route path=\"/quicksetting\" exact component={QuickSetting} />\n              <Route path=\"/lockscreen\" exact component={LockScreen} />\n              <Route path=\"/gesture\" exact component={Gesture} />\n              <Route path=\"/notification\" exact component={Notification} />\n              <Route path=\"/miscellaneous\" exact component={Miscellaneous} />\n              <Route path=\"\" component={Page404} />\n            </Switch>\n          </div>\n          <Footer />\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default withRouter(PersistentDrawerLeft);\n","import React from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport PersistentDrawerLeft from \"./components/PersistentDrawerLeft/PersistentDrawerLeft\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <PersistentDrawerLeft />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}